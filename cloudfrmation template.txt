{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cloudformation Template of Network Architect. It will create VPC, CloudTrail in all Region, VPC Flow Logs, Internet Gateway, NAT & Route Table",
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCCIDR"
        },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "VPCName"
            }
          }
        ]
      }
    },
    "Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "vpc-flow-logs.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "flowlogs-policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "RoleName": "VPCFlowLogsRole"
      }
    },
    "VPCLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": {
          "Ref": "RetentionInDays"
        }
      }
    },
    "FlowLog": {
      "Type": "AWS::EC2::FlowLog",
      "Properties": {
        "DeliverLogsPermissionArn": {
          "Fn::GetAtt": [
            "Role",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Ref": "VPCLogGroup"
        },
        "ResourceId": {
          "Ref": "VPC"
        },
        "ResourceType": "VPC",
        "TrafficType": {
          "Ref": "TrafficType"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "VPCName"
                  },
                  "InternetGateway"
                ]
              ]
            }
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "pubsubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "publicsubnetcidr"
        },
        "AvailabilityZone": {
          "Ref": "publicAZ"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public-Subnet"
          }
        ]
      }
    },
    "CustRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateRouteTable"
          }
        ]
      }
    },
    "DefaultRT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicRouteTable"
          }
        ]
      }
    },
    "Routeupdate": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DefaultRT"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "publicsubnetassociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "pubsubnet"
        },
        "RouteTableId": {
          "Ref": "DefaultRT"
        }
      },
      "DependsOn": "pubsubnet"
    },
    "bastionSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "bastionPublicSubnetCIDR"
        },
        "AvailabilityZone": {
          "Ref": "bastionAZ"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "Management",
                  {
                    "Ref": "bastionSubnetName"
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "BastionSubnetAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "bastionSubnet"
        },
        "RouteTableId": {
          "Ref": "DefaultRT"
        }
      }
    },
    "bastionSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "BastionSecGroup",
        "GroupDescription": "Open SSH",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "bastionSGDestionationAddress"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "BastionSG"
          }
        ]
      }
    },
    "bastionServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [
              {
                "Ref": "bastionSG"
              }
            ],
            "SubnetId": {
              "Ref": "bastionSubnet"
            }
          }
        ],
        "DisableApiTermination": {
          "Ref": "BastionServerTermination"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": {
                "Ref": "BastionVolumeSize"
              },
              "DeleteOnTermination": {
                "Ref": "bastionVolumeTermination"
              },
              "VolumeType": "gp2"
            }
          }
        ],
        "KeyName": {
          "Ref": "BastionKeyPair"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "Bastion",
                  {
                    "Ref": "bastionTAG"
                  }
                ]
              ]
            }
          }
        ]
      }
    }
  },
  "Parameters": {
    "VPCCIDR": {
      "Type": "String",
      "Default": "10.10.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "Description": "Enter VPC Range"
    },
    "VPCName": {
      "Description": "Enter Name for VPC",
      "Type": "String"
    },
    "publicAZ": {
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "publicsubnetcidr": {
      "Type": "String",
      "Default": "10.10.1.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "Description": "Enter range for Public Subent"
    },
    "bastionPublicSubnetCIDR": {
      "Type": "String",
      "Default": "10.10.2.0/24",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "Description": "Enter range for Public Subent"
    },
    "bastionAZ": {
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "bastionSubnetName": {
      "Type": "String",
      "Description": "Enter Subnet Name (Note: Name is preceded by \"Management\")"
    },
    "bastionTAG": {
      "Type": "String",
      "Description": "Enter the Environment/Tag Name for EC2 servers (Note: Name is preceded by \"Bastion\")"
    },
    "bastionVolumeTermination": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "false",
        "true"
      ],
      "Description": "Select \"true\" if volume is to be retained post server deletion"
    },
    "BastionServerTermination": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "false",
        "true"
      ],
      "Description": "Selecting \"true\" will require to disable the termination protection manually from the console"
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "Description": "Select the instance type "
    },
    "BastionVolumeSize": {
      "Type": "Number",
      "Description": "EBS VolumeSize (GB)",
      "Default": "10"
    },
    "BastionKeyPair": {
      "Description": "Select the exsisting Key",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "bastionSGDestionationAddress": {
      "Description": "Enter the IP to be whitelisted to SSH Bastion Host",
      "Type": "String",
      "Default": "0.0.0.0/0"
    },
    "RetentionInDays": {
      "Description": "Specify number of days you want to retain VPC_Flow_log.",
      "Type": "Number",
      "Default": 14,
      "AllowedValues": [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1827,
        3653
      ]
    },
    "TrafficType": {
      "Description": "The type of traffic to stream in cloudtrail bucket",
      "Type": "String",
      "Default": "REJECT",
      "AllowedValues": [
        "ACCEPT",
        "REJECT",
        "ALL"
      ]
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "AMI": "ami-a4827dc9"
      },
      "us-west-1": {
        "AMI": "ami-11790371"
      },
      "us-west-2": {
        "AMI": "ami-f303fb93"
      },
      "ap-south-1": {
        "AMI": "ami-e2b6dc8d"
      },
      "ap-northeast-2": {
        "AMI": "ami-69e92207"
      },
      "ap-southeast-1": {
        "AMI": "ami-a2c111c1"
      },
      "ap-southeast-2": {
        "AMI": "ami-d9d7f9ba"
      },
      "ap-northeast-1": {
        "AMI": "ami-6154bb00"
      },
      "eu-central-1": {
        "AMI": "ami-7df01e12"
      },
      "eu-west-1": {
        "AMI": "ami-c39604b0"
      },
      "sa-east-1": {
        "AMI": "ami-106ee57c"
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "VPC"
          },
          "Parameters": [
            "VPCCIDR",
            "VPCName",
            "RetentionInDays",
            "TrafficType"
          ]
        },
        {
          "Label": {
            "default": "Public Subnets",
            "Description": "Public subnet for Internet Gateway"
          },
          "Parameters": [
            "publicAZ",
            "publicsubnetcidr"
          ]
        },
        {
          "Label": {
            "default": "Management Subnets",
            "Description": "Management subnet for Bastion Host"
          },
          "Parameters": [
            "bastionAZ",
            "bastionPublicSubnetCIDR",
            "bastionSubnetName"
          ]
        },
        {
          "Label": {
            "default": "Management Server",
            "Description": "Management Server for Bastion Host"
          },
          "Parameters": [
            "bastionTAG",
            "bastionVolumeTermination",
            "BastionServerTermination",
            "InstanceType",
            "BastionVolumeSize",
            "BastionKeyPair",
            "bastionSGDestionationAddress"
          ]
        }
      ],
      "ParameterLabels": {
        
        "VPCCIDR": {
          "default": "VPC Range "
        },
        "VPCName": {
          "default": "VPC Name "
        },
        "RetentionInDays": {
          "default": "FlowLogs Retaintion Period "
        },
        "TrafficType": {
          "default": "Traffic type Role "
        },
        "publicsubnetcidr": {
          "default": "Public Subnet "
        },
        "publicAZ": {
          "default": "Select Availability Zone "
        },
        "bastionSubnetName": {
          "default": "Management Subnet Name "
        },
        "bastionAZ": {
          "default": "Select Availability Zone "
        },
        "bastionPublicSubnetCIDR": {
          "default": "Subnet Range "
        },
        "bastionTAG": {
          "default": "Environment/Tag "
        },
        "bastionVolumeTermination": {
          "default": "volume Termination Protection "
        },
        "BastionServerTermination": {
          "default": "EC2 Termination Protection "
        },
        "InstanceType": {
          "default": "Instance Type "
        },
        "BastionVolumeSize": {
          "default": "Volume Size "
        },
        "BastionKeyPair": {
          "default": "Key Pair "
        },
        "bastionSGDestionationAddress": {
          "default": "ASource IP for Bastion SG"
        }
      }
    }
  },
  "Outputs": {
    "VPC": {
      "Description": "VPC ID",
      "Value": {
        "Ref": "VPC"
      },
      "Export": {
        "Name": "Network-VPCID"
      }
    },
    "VPCCIDR": {
      "Description": "VPC CIDR",
      "Value": {
        "Fn::GetAtt": [
          "VPC",
          "CidrBlock"
        ]
      },
      "Export": {
        "Name": "Network-VPCRange"
      }
    },
    "PrivateRouteTableID": {
      "Description": "Private Route Table ID",
      "Value": {
        "Ref": "CustRouteTable"
      },
      "Export": {
        "Name": "Network-PrivateRouteTableID"
      }
    },
    "PublicRouteTableID": {
      "Description": "Public Route Table ID",
      "Value": {
        "Ref": "DefaultRT"
      },
      "Export": {
        "Name": "Network-PublicRouteTableID"
      }
    },
    "MyStacksRegion": {
      "Description": "VPC Region",
      "Value": {
        "Ref": "AWS::Region"
      },
      "Export": {
        "Name": "Network-VPCRegion"
      }
    }
  }
}